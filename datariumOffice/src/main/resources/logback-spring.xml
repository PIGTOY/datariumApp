<?xml version="1.0" encoding="UTF-8"?>
<!-- 30초마다 설정 파일 변경 확인 -->
<configuration scan="true" scanPeriod="30 seconds">

    <timestamp key="currDay" datePattern="yyyy-MM-dd"/>
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{0}[%method:%line] - [%X{traceId}],%msg%n"/>

    <springProfile name="local">
        <property name="LOG_HOME" value="C:/logs/datariumOffice" />
        <property name="MAX_DATE" value="365"/>
        <property name="LOG_LEVEL" value="DEBUG"/>
    </springProfile>

   <!-- File Appender --> 
   <appender name="SERVICE-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender"> 
   	<!-- 파일경로 설정 --> 
   	<file>${LOG_PATH}/service/service.log</file> 
   	<!-- 출력패턴 설정--> 
   	<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> 
   		<pattern>${LOG_PATTERN}</pattern> 
   	</encoder> 
   	<!-- Rolling 정책 --> 
   	<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
   		<!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 --> 
   		<fileNamePattern>${LOG_PATH}/service/backup/service.%d{yyyy-MM-dd}_%i.log</fileNamePattern> 
   		<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
	   		<!-- 파일당 최고 용량 kb, mb, gb --> 
	   		<maxFileSize>10MB</maxFileSize> 
   		</timeBasedFileNamingAndTriggeringPolicy> 
   		<!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거--> 
   		<maxHistory>30</maxHistory> 
   	</rollingPolicy> 
   </appender> 
   
    <appender name="QUERY-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        	<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> 
                <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <file>${LOG_HOME}/query/query.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/query/backup/query.%d{yyyy-MM-dd}.log.%i.gz</fileNamePattern>
            <maxHistory>${MAX_DATE}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    
   <!-- 에러의 경우 파일에 로그 처리 --> 
   <appender name="ERROR-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender"> 
   	<filter class="ch.qos.logback.classic.filter.LevelFilter"> 
   		<level>error</level> 
   		<onMatch>ACCEPT</onMatch> 
   		<onMismatch>DENY</onMismatch> 
   	</filter> 
   	<file>${LOG_PATH}/${ERR_LOG_FILE_NAME}.log</file> 
	<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> 
		<pattern>${LOG_PATTERN}</pattern> 
	</encoder> 
	<!-- Rolling 정책 --> 
	<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
		<!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 --> 
		<fileNamePattern>${LOG_PATH}/${ERR_LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern> 
		<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
 		<!-- 파일당 최고 용량 kb, mb, gb --> 
 		<maxFileSize>10MB</maxFileSize> 
		</timeBasedFileNamingAndTriggeringPolicy> 
		<!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거--> 
		<maxHistory>60</maxHistory> 
	</rollingPolicy> 
   </appender>
   
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> 
             <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="catalina" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> 
             <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <file>${LOG_HOME}/catalina/catalina.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/catalina/backup/catalina.%d{yyyy-MM-dd}.log.%i.gz</fileNamePattern>
            <maxHistory>${MAX_DATE}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <logger name="java.sql">
        <level value="error" />
        <appender-ref ref="catalina"/>
        <appender-ref ref="console" />
        <appender-ref ref="QUERY-LOG"/>
    </logger>

    <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
    <logger name="jdbc.sqlonly" additivity="false">
        <level value="info" />
        <appender-ref ref="catalina"/>
        <appender-ref ref="console" />
        <appender-ref ref="QUERY-LOG"/>
    </logger>

    <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
    <logger name="jdbc.sqltiming"  additivity="false">
        <level value="error" />
        <appender-ref ref="catalina"/>
        <appender-ref ref="console" />
        <appender-ref ref="QUERY-LOG"/>
    </logger>

    <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를
        추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
    <logger name="jdbc.audit" additivity="false">
        <level value="error" />
    </logger>

    <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
    <logger name="jdbc.resultset" additivity="false">
        <level value="error" />
    </logger>

    <logger name="jdbc.connection"  additivity="false">
        <level value="error" />
        <appender-ref ref="catalina"/>
        <appender-ref ref="console" />
        <appender-ref ref="QUERY-LOG"/>
    </logger>

    <logger name="jdbc.resultsettable" additivity="false">
        <level value="INFO" />
        <appender-ref ref="catalina"/>
        <appender-ref ref="console" />
        <appender-ref ref="QUERY-LOG"/>
    </logger>


    <logger name="com.hanadocu" additivity="false">
        <level value="${LOG_LEVEL}" />
        <appender-ref ref="catalina"/>
        <appender-ref ref="console" />
        <appender-ref ref="SERVICE-LOG" />
    </logger>


    <!-- 에러 로그 -->
    <logger name="error">
        <level value="${LOG_LEVEL}" />
        <appender-ref ref="ERROR-LOG"/>
    </logger>

    <!-- Root Logger -->
    <root>
        <level value="${LOG_LEVEL}" />
        <appender-ref ref="catalina"/>
        <appender-ref ref="console" />
    </root>
    
    <logger name="com.zaxxer.hikari" level="error" >
        <appender-ref ref="catalina"/>
        <appender-ref ref="console" />
    </logger>


    <logger name="org.springframework" additivity="false">
        <level value="${LOG_LEVEL}" />
        <appender-ref ref="console" />
        <appender-ref ref="catalina"/>
    </logger>

</configuration>